{"version":3,"sources":["../../../src/classes/DragDropMonitorImpl.ts"],"sourcesContent":["import type { Store } from 'redux'\nimport { invariant } from '@react-dnd/invariant'\nimport { matchesType } from '../utils/matchesType.js'\nimport {\n\tgetSourceClientOffset,\n\tgetDifferenceFromInitialOffset,\n} from '../utils/coords.js'\nimport { areDirty } from '../utils/dirtiness.js'\nimport type { State } from '../reducers/index.js'\nimport type {\n\tDragDropMonitor,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n\tHandlerRegistry,\n\tIdentifier,\n} from '../interfaces.js'\n\nexport class DragDropMonitorImpl implements DragDropMonitor {\n\tprivate store: Store<State>\n\tpublic readonly registry: HandlerRegistry\n\n\tpublic constructor(store: Store<State>, registry: HandlerRegistry) {\n\t\tthis.store = store\n\t\tthis.registry = registry\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions: { handlerIds?: string[] } = {},\n\t): Unsubscribe {\n\t\tconst { handlerIds } = options\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\t\tinvariant(\n\t\t\ttypeof handlerIds === 'undefined' || Array.isArray(handlerIds),\n\t\t\t'handlerIds, when specified, must be an array of strings.',\n\t\t)\n\n\t\tlet prevStateId = this.store.getState().stateId\n\t\tconst handleChange = () => {\n\t\t\tconst state = this.store.getState()\n\t\t\tconst currentStateId = state.stateId\n\t\t\ttry {\n\t\t\t\tconst canSkipListener =\n\t\t\t\t\tcurrentStateId === prevStateId ||\n\t\t\t\t\t(currentStateId === prevStateId + 1 &&\n\t\t\t\t\t\t!areDirty(state.dirtyHandlerIds, handlerIds))\n\n\t\t\t\tif (!canSkipListener) {\n\t\t\t\t\tlistener()\n\t\t\t\t}\n\t\t\t} finally {\n\t\t\t\tprevStateId = currentStateId\n\t\t\t}\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\tinvariant(typeof listener === 'function', 'listener must be a function.')\n\n\t\tlet previousState = this.store.getState().dragOffset\n\t\tconst handleChange = () => {\n\t\t\tconst nextState = this.store.getState().dragOffset\n\t\t\tif (nextState === previousState) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tpreviousState = nextState\n\t\t\tlistener()\n\t\t}\n\n\t\treturn this.store.subscribe(handleChange)\n\t}\n\n\tpublic canDragSource(sourceId: string | undefined): boolean {\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.canDrag(this, sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\t\tconst target = this.registry.getTarget(targetId)\n\t\tinvariant(target, `Expected to find a valid target. targetId=${targetId}`)\n\n\t\tif (!this.isDragging() || this.didDrop()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\treturn (\n\t\t\tmatchesType(targetType, draggedItemType) && target.canDrop(this, targetId)\n\t\t)\n\t}\n\n\tpublic isDragging(): boolean {\n\t\treturn Boolean(this.getItemType())\n\t}\n\n\tpublic isDraggingSource(sourceId: string | undefined): boolean {\n\t\t// undefined on initial render\n\t\tif (!sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tconst source = this.registry.getSource(sourceId, true)\n\t\tinvariant(source, `Expected to find a valid source. sourceId=${sourceId}`)\n\n\t\tif (!this.isDragging() || !this.isSourcePublic()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst sourceType = this.registry.getSourceType(sourceId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (sourceType !== draggedItemType) {\n\t\t\treturn false\n\t\t}\n\n\t\treturn source.isDragging(this, sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: string | undefined,\n\t\toptions = { shallow: false },\n\t): boolean {\n\t\t// undefined on initial render\n\t\tif (!targetId) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst { shallow } = options\n\t\tif (!this.isDragging()) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetType = this.registry.getTargetType(targetId)\n\t\tconst draggedItemType = this.getItemType()\n\t\tif (draggedItemType && !matchesType(targetType, draggedItemType)) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst targetIds = this.getTargetIds()\n\t\tif (!targetIds.length) {\n\t\t\treturn false\n\t\t}\n\n\t\tconst index = targetIds.indexOf(targetId)\n\t\tif (shallow) {\n\t\t\treturn index === targetIds.length - 1\n\t\t} else {\n\t\t\treturn index > -1\n\t\t}\n\t}\n\n\tpublic getItemType(): Identifier {\n\t\treturn this.store.getState().dragOperation.itemType as Identifier\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.store.getState().dragOperation.item\n\t}\n\n\tpublic getSourceId(): string | null {\n\t\treturn this.store.getState().dragOperation.sourceId\n\t}\n\n\tpublic getTargetIds(): string[] {\n\t\treturn this.store.getState().dragOperation.targetIds\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.store.getState().dragOperation.dropResult\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.store.getState().dragOperation.didDrop\n\t}\n\n\tpublic isSourcePublic(): boolean {\n\t\treturn Boolean(this.store.getState().dragOperation.isSourcePublic)\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialClientOffset\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.initialSourceClientOffset\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.store.getState().dragOffset.clientOffset\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn getSourceClientOffset(this.store.getState().dragOffset)\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn getDifferenceFromInitialOffset(this.store.getState().dragOffset)\n\t}\n}\n"],"names":["DragDropMonitorImpl","subscribeToStateChange","listener","options","handlerIds","invariant","Array","isArray","prevStateId","store","getState","stateId","handleChange","state","currentStateId","canSkipListener","areDirty","dirtyHandlerIds","subscribe","subscribeToOffsetChange","previousState","dragOffset","nextState","canDragSource","sourceId","source","registry","getSource","isDragging","canDrag","canDropOnTarget","targetId","target","getTarget","didDrop","targetType","getTargetType","draggedItemType","getItemType","matchesType","canDrop","Boolean","isDraggingSource","isSourcePublic","sourceType","getSourceType","isOverTarget","shallow","targetIds","getTargetIds","length","index","indexOf","dragOperation","itemType","getItem","item","getSourceId","getDropResult","dropResult","getInitialClientOffset","initialClientOffset","getInitialSourceClientOffset","initialSourceClientOffset","getClientOffset","clientOffset","getSourceClientOffset","getDifferenceFromInitialOffset"],"mappings":"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"}