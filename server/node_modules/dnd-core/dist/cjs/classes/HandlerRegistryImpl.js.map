{"version":3,"sources":["../../../src/classes/HandlerRegistryImpl.ts"],"sourcesContent":["import type { Store } from 'redux'\nimport { invariant } from '@react-dnd/invariant'\nimport {\n\taddSource,\n\taddTarget,\n\tremoveSource,\n\tremoveTarget,\n} from '../actions/registry.js'\nimport { getNextUniqueId } from '../utils/getNextUniqueId.js'\nimport type { State } from '../reducers/index.js'\nimport {\n\tDragSource,\n\tDropTarget,\n\tSourceType,\n\tTargetType,\n\tIdentifier,\n\tHandlerRole,\n\tHandlerRegistry,\n} from '../interfaces.js'\nimport {\n\tvalidateSourceContract,\n\tvalidateTargetContract,\n\tvalidateType,\n} from '../contracts.js'\nimport { asap } from '@react-dnd/asap'\n\nfunction getNextHandlerId(role: HandlerRole): string {\n\tconst id = getNextUniqueId().toString()\n\tswitch (role) {\n\t\tcase HandlerRole.SOURCE:\n\t\t\treturn `S${id}`\n\t\tcase HandlerRole.TARGET:\n\t\t\treturn `T${id}`\n\t\tdefault:\n\t\t\tthrow new Error(`Unknown Handler Role: ${role}`)\n\t}\n}\n\nfunction parseRoleFromHandlerId(handlerId: string) {\n\tswitch (handlerId[0]) {\n\t\tcase 'S':\n\t\t\treturn HandlerRole.SOURCE\n\t\tcase 'T':\n\t\t\treturn HandlerRole.TARGET\n\t\tdefault:\n\t\t\tthrow new Error(`Cannot parse handler ID: ${handlerId}`)\n\t}\n}\n\nfunction mapContainsValue<T>(map: Map<string, T>, searchValue: T) {\n\tconst entries = map.entries()\n\tlet isDone = false\n\tdo {\n\t\tconst {\n\t\t\tdone,\n\t\t\tvalue: [, value],\n\t\t} = entries.next()\n\t\tif (value === searchValue) {\n\t\t\treturn true\n\t\t}\n\t\tisDone = !!done\n\t} while (!isDone)\n\treturn false\n}\n\nexport class HandlerRegistryImpl implements HandlerRegistry {\n\tprivate types: Map<string, SourceType | TargetType> = new Map()\n\tprivate dragSources: Map<string, DragSource> = new Map()\n\tprivate dropTargets: Map<string, DropTarget> = new Map()\n\tprivate pinnedSourceId: string | null = null\n\tprivate pinnedSource: any = null\n\tprivate store: Store<State>\n\n\tpublic constructor(store: Store<State>) {\n\t\tthis.store = store\n\t}\n\n\tpublic addSource(type: SourceType, source: DragSource): string {\n\t\tvalidateType(type)\n\t\tvalidateSourceContract(source)\n\n\t\tconst sourceId = this.addHandler(HandlerRole.SOURCE, type, source)\n\t\tthis.store.dispatch(addSource(sourceId))\n\t\treturn sourceId\n\t}\n\n\tpublic addTarget(type: TargetType, target: DropTarget): string {\n\t\tvalidateType(type, true)\n\t\tvalidateTargetContract(target)\n\n\t\tconst targetId = this.addHandler(HandlerRole.TARGET, type, target)\n\t\tthis.store.dispatch(addTarget(targetId))\n\t\treturn targetId\n\t}\n\n\tpublic containsHandler(handler: DragSource | DropTarget): boolean {\n\t\treturn (\n\t\t\tmapContainsValue(this.dragSources, handler) ||\n\t\t\tmapContainsValue(this.dropTargets, handler)\n\t\t)\n\t}\n\n\tpublic getSource(sourceId: string, includePinned = false): DragSource {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\tconst isPinned = includePinned && sourceId === this.pinnedSourceId\n\t\tconst source = isPinned ? this.pinnedSource : this.dragSources.get(sourceId)\n\t\treturn source\n\t}\n\n\tpublic getTarget(targetId: string): DropTarget {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.dropTargets.get(targetId) as DropTarget\n\t}\n\n\tpublic getSourceType(sourceId: string): Identifier {\n\t\tinvariant(this.isSourceId(sourceId), 'Expected a valid source ID.')\n\t\treturn this.types.get(sourceId) as Identifier\n\t}\n\n\tpublic getTargetType(targetId: string): Identifier | Identifier[] {\n\t\tinvariant(this.isTargetId(targetId), 'Expected a valid target ID.')\n\t\treturn this.types.get(targetId) as Identifier | Identifier[]\n\t}\n\n\tpublic isSourceId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.SOURCE\n\t}\n\n\tpublic isTargetId(handlerId: string): boolean {\n\t\tconst role = parseRoleFromHandlerId(handlerId)\n\t\treturn role === HandlerRole.TARGET\n\t}\n\n\tpublic removeSource(sourceId: string): void {\n\t\tinvariant(this.getSource(sourceId), 'Expected an existing source.')\n\t\tthis.store.dispatch(removeSource(sourceId))\n\t\tasap(() => {\n\t\t\tthis.dragSources.delete(sourceId)\n\t\t\tthis.types.delete(sourceId)\n\t\t})\n\t}\n\n\tpublic removeTarget(targetId: string): void {\n\t\tinvariant(this.getTarget(targetId), 'Expected an existing target.')\n\t\tthis.store.dispatch(removeTarget(targetId))\n\t\tthis.dropTargets.delete(targetId)\n\t\tthis.types.delete(targetId)\n\t}\n\n\tpublic pinSource(sourceId: string): void {\n\t\tconst source = this.getSource(sourceId)\n\t\tinvariant(source, 'Expected an existing source.')\n\n\t\tthis.pinnedSourceId = sourceId\n\t\tthis.pinnedSource = source\n\t}\n\n\tpublic unpinSource(): void {\n\t\tinvariant(this.pinnedSource, 'No source is pinned at the time.')\n\n\t\tthis.pinnedSourceId = null\n\t\tthis.pinnedSource = null\n\t}\n\n\tprivate addHandler(\n\t\trole: HandlerRole,\n\t\ttype: SourceType | TargetType,\n\t\thandler: DragSource | DropTarget,\n\t): string {\n\t\tconst id = getNextHandlerId(role)\n\t\tthis.types.set(id, type)\n\t\tif (role === HandlerRole.SOURCE) {\n\t\t\tthis.dragSources.set(id, handler as DragSource)\n\t\t} else if (role === HandlerRole.TARGET) {\n\t\t\tthis.dropTargets.set(id, handler as DropTarget)\n\t\t}\n\t\treturn id\n\t}\n}\n"],"names":["getNextHandlerId","role","id","getNextUniqueId","toString","HandlerRole","SOURCE","TARGET","Error","parseRoleFromHandlerId","handlerId","mapContainsValue","map","searchValue","entries","isDone","done","value","next","HandlerRegistryImpl","addSource","type","source","validateType","validateSourceContract","sourceId","addHandler","store","dispatch","addTarget","target","validateTargetContract","targetId","containsHandler","handler","dragSources","dropTargets","getSource","includePinned","invariant","isSourceId","isPinned","pinnedSourceId","pinnedSource","get","getTarget","isTargetId","getSourceType","types","getTargetType","removeSource","asap","delete","removeTarget","pinSource","unpinSource","set","Map"],"mappings":"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"}