{"version":3,"sources":["../../../../src/actions/dragDrop/endDrag.ts"],"sourcesContent":["import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tSentinelAction,\n\tDragDropMonitor,\n} from '../../interfaces.js'\nimport { END_DRAG } from './types.js'\n\nexport function createEndDrag(manager: DragDropManager) {\n\treturn function endDrag(): SentinelAction {\n\t\tconst monitor = manager.getMonitor()\n\t\tconst registry = manager.getRegistry()\n\t\tverifyIsDragging(monitor)\n\n\t\tconst sourceId = monitor.getSourceId()\n\t\tif (sourceId != null) {\n\t\t\tconst source = registry.getSource(sourceId, true)\n\t\t\tsource.endDrag(monitor, sourceId)\n\t\t\tregistry.unpinSource()\n\t\t}\n\t\treturn { type: END_DRAG }\n\t}\n}\n\nfunction verifyIsDragging(monitor: DragDropMonitor) {\n\tinvariant(monitor.isDragging(), 'Cannot call endDrag while not dragging.')\n}\n"],"names":["createEndDrag","manager","endDrag","monitor","getMonitor","registry","getRegistry","verifyIsDragging","sourceId","getSourceId","source","getSource","unpinSource","type","END_DRAG","invariant","isDragging"],"mappings":"AAAA;;;;QAQgBA,aAAa,GAAbA,aAAa;AARH,IAAA,UAAsB,WAAtB,sBAAsB,CAAA;AAMvB,IAAA,QAAY,WAAZ,YAAY,CAAA;AAE9B,SAASA,aAAa,CAACC,OAAwB,EAAE;IACvD,OAAO,SAASC,OAAO,GAAmB;QACzC,MAAMC,OAAO,GAAGF,OAAO,CAACG,UAAU,EAAE;QACpC,MAAMC,QAAQ,GAAGJ,OAAO,CAACK,WAAW,EAAE;QACtCC,gBAAgB,CAACJ,OAAO,CAAC;QAEzB,MAAMK,QAAQ,GAAGL,OAAO,CAACM,WAAW,EAAE;QACtC,IAAID,QAAQ,IAAI,IAAI,EAAE;YACrB,MAAME,MAAM,GAAGL,QAAQ,CAACM,SAAS,CAACH,QAAQ,EAAE,IAAI,CAAC;YACjDE,MAAM,CAACR,OAAO,CAACC,OAAO,EAAEK,QAAQ,CAAC;YACjCH,QAAQ,CAACO,WAAW,EAAE;SACtB;QACD,OAAO;YAAEC,IAAI,EAAEC,QAAQ,SAAA;SAAE,CAAA;KACzB,CAAA;CACD;AAED,SAASP,gBAAgB,CAACJ,OAAwB,EAAE;IACnDY,CAAAA,GAAAA,UAAS,AAAiE,CAAA,UAAjE,CAACZ,OAAO,CAACa,UAAU,EAAE,EAAE,yCAAyC,CAAC;CAC1E"}